/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package edu.duke.yl883.battleship;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;

import java.io.BufferedReader;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.PrintStream;
import java.io.StringReader;

import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.parallel.ResourceAccessMode;
import org.junit.jupiter.api.parallel.ResourceLock;
import org.junit.jupiter.api.parallel.Resources;

class AppTest {
  @Test
  @ResourceLock(value = Resources.SYSTEM_OUT, mode = ResourceAccessMode.READ_WRITE)
  void test_main() throws IOException {
    ByteArrayOutputStream bytes = new ByteArrayOutputStream();
    PrintStream out = new PrintStream(bytes, true);

    InputStream input = getClass().getClassLoader().getResourceAsStream("input.txt");
    assertNotNull(input);
    InputStream expectedStream = getClass().getClassLoader().getResourceAsStream("output.txt");
    assertNotNull(expectedStream);
    InputStream oldIn = System.in;
    PrintStream oldOut = System.out;
    try {
      System.setIn(input);
      System.setOut(out);
      App.main(new String[0]);
    } finally {
      System.setIn(oldIn);
      System.setOut(oldOut);
    }

    String expected = new String(expectedStream.readAllBytes());
    String actual = bytes.toString();
    assertEquals(expected, actual);

  }
  @Test
  void test_do_placement_phase() throws IOException{
    Board<Character> b1 = new BattleShipBoard<Character>(10, 20, 'X');
    Board<Character> b2 = new BattleShipBoard<Character>(10, 20, 'X');
    BufferedReader input = new BufferedReader(new StringReader("A0V\nC0H\nA2V\nA3V\nF4V\nA5V\nE6V\nA7V\nA8V\nD9V\nA0V\nC0H\nA2V\nA3V\nF4V\nA5V\nE6V\nA7V\nA8V\nD9V\n"));
    V1ShipFactory factory = new V1ShipFactory();
    ByteArrayOutputStream bytes = new ByteArrayOutputStream();
    PrintStream output = new PrintStream(bytes, true);
    ByteArrayOutputStream bytes1 = new ByteArrayOutputStream();
    PrintStream output1 = new PrintStream(bytes1, true);
    TextPlayer p1 = new TextPlayer("A", b1, input, output, factory, b2);
    TextPlayer p2 = new TextPlayer("A", b2, input, output1, factory, b1);

    App app = new App(p1, p2);
    app.doPlacementPhase();
    assertEquals(bytes.toString(), bytes1.toString());
  }

}

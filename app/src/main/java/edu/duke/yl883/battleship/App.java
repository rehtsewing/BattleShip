/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package edu.duke.yl883.battleship;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.StringReader;
import java.util.ArrayList;

/** Highest level structure of battleship game */
public class App {
  /** Two textplayer of the game*/
  final TextPlayer player1, player2;
  /** Two computer textplayer of the game*/
  final TextComputer computer1, computer2;
  /** confront pair in theis app*/
  protected ArrayList<TextUser> confrontPair;
  /**
   * Construct the game app with specfied two players
   *
   * @param player1 is first player
   * @param player2 is second player
   * @param computer1 is first computer player
   * @param computer2 is second computer player*/
  public App(TextPlayer player1, TextPlayer player2, TextComputer computer1, TextComputer computer2) {
    this.player1 = player1;
    this.player2 = player2;
    this.computer1 = computer1;
    this.computer2 = computer2;
    this.confrontPair = new ArrayList<TextUser>();
  }
  public void addHuman() {
    confrontPair.add(player1);
    confrontPair.add(player2);
  }
  public void doPlayerSelection() throws IOException{
    if(player1.doPlayerSelection()) confrontPair.add(player1);
    if(player2.doPlayerSelection()) confrontPair.add(player2);
    if(confrontPair.size() < 2) confrontPair.add(computer1);
    if(confrontPair.size() < 2) confrontPair.add(computer2);
    confrontPair.get(0).setEnemyBoard(confrontPair.get(1).getOwnBoard());
    confrontPair.get(1).setEnemyBoard(confrontPair.get(0).getOwnBoard());
  }
  /** 
   * Handle player1 and player 2 to
   * start placement phase 
   */
  public void doPlacementPhase() throws IOException{
    confrontPair.get(0).doPlacementPhase();
    confrontPair.get(1).doPlacementPhase();
  }
  /** 
   * Handle player1 and player 2 to
   * do attack until the game end
   */
  public void doAttackingPhase() throws IOException{
    while(true) {
      confrontPair.get(0).playOneTurn();
      if(confrontPair.get(0).isWin()) {
        break;
      }
      confrontPair.get(1).playOneTurn();
      if(confrontPair.get(1).isWin()) {
        break;
      }
    }
  }

  public static void main(String[] args) throws IOException {
    Board<Character> b1 = new BattleShipBoard<Character>(10, 20, 'X');
    Board<Character> b2 = new BattleShipBoard<Character>(10, 20, 'X');
    Board<Character> b3 = new BattleShipBoard<Character>(10, 20, 'X');
    Board<Character> b4 = new BattleShipBoard<Character>(10, 20, 'X');
    BufferedReader input = new BufferedReader(new InputStreamReader(System.in));
    V2ShipFactory factory = new V2ShipFactory();

    TextPlayer p1 = new TextPlayer("Human A", b1, input, System.out, factory, b1);
    TextPlayer p2 = new TextPlayer("Human B", b2, input, System.out, factory, b2);
    TextComputer p3 = new TextComputer("Computer 1", b3, input, System.out, factory, b3);
    TextComputer p4 = new TextComputer("Computer 2", b4, input, System.out, factory, b4);

    App app = new App(p1, p2, p3, p4);
    app.doPlayerSelection();
    app.doPlacementPhase();
    app.doAttackingPhase();
  }
}
